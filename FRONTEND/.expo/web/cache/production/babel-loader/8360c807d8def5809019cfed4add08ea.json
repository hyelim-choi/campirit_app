{"ast":null,"code":"function flattenArray(array){function flattenDown(array,result){for(var i=0;i<array.length;i++){var value=array[i];if(Array.isArray(value)){flattenDown(value,result);}else if(value!=null&&value!==false){result.push(value);}}return result;}return flattenDown(array,[]);}export default flattenArray;","map":{"version":3,"names":["flattenArray","array","flattenDown","result","i","length","value","Array","isArray","push"],"sources":["C:/Users/sycla/Coding/Campirit/FRONTEND/node_modules/react-native-web/dist/modules/flattenArray/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nfunction flattenArray(array) {\r\n  function flattenDown(array, result) {\r\n    for (var i = 0; i < array.length; i++) {\r\n      var value = array[i];\r\n\r\n      if (Array.isArray(value)) {\r\n        flattenDown(value, result);\r\n      } else if (value != null && value !== false) {\r\n        result.push(value);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  return flattenDown(array, []);\r\n}\r\n\r\nexport default flattenArray;"],"mappings":"AAQA,QAASA,aAAT,CAAsBC,KAAtB,CAA6B,CAC3B,QAASC,YAAT,CAAqBD,KAArB,CAA4BE,MAA5B,CAAoC,CAClC,IAAK,GAAIC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,KAAK,CAACI,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACrC,GAAIE,MAAK,CAAGL,KAAK,CAACG,CAAD,CAAjB,CAEA,GAAIG,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,CAA0B,CACxBJ,WAAW,CAACI,KAAD,CAAQH,MAAR,CAAX,CACD,CAFD,IAEO,IAAIG,KAAK,EAAI,IAAT,EAAiBA,KAAK,GAAK,KAA/B,CAAsC,CAC3CH,MAAM,CAACM,IAAP,CAAYH,KAAZ,EACD,CACF,CAED,MAAOH,OAAP,CACD,CAED,MAAOD,YAAW,CAACD,KAAD,CAAQ,EAAR,CAAlB,CACD,CAED,cAAeD,aAAf"},"metadata":{},"sourceType":"module"}