{"ast":null,"code":"import*as React from'react';var UNINITIALIZED=typeof Symbol==='function'&&typeof Symbol()==='symbol'?Symbol():Object.freeze({});export default function useStable(getInitialValue){var ref=React.useRef(UNINITIALIZED);if(ref.current===UNINITIALIZED){ref.current=getInitialValue();}return ref.current;}","map":{"version":3,"names":["React","UNINITIALIZED","Symbol","Object","freeze","useStable","getInitialValue","ref","useRef","current"],"sources":["C:/Users/sycla/Coding/Campirit/FRONTEND/node_modules/react-native-web/dist/modules/useStable/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport * as React from 'react';\r\nvar UNINITIALIZED = typeof Symbol === 'function' && typeof Symbol() === 'symbol' ? Symbol() : Object.freeze({});\r\nexport default function useStable(getInitialValue) {\r\n  var ref = React.useRef(UNINITIALIZED);\r\n\r\n  if (ref.current === UNINITIALIZED) {\r\n    ref.current = getInitialValue();\r\n  } // $FlowFixMe (#64650789) Trouble refining types where `Symbol` is concerned.\r\n\r\n\r\n  return ref.current;\r\n}"],"mappings":"AAQA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CACA,GAAIC,cAAa,CAAG,MAAOC,OAAP,GAAkB,UAAlB,EAAgC,MAAOA,OAAM,EAAb,GAAoB,QAApD,CAA+DA,MAAM,EAArE,CAA0EC,MAAM,CAACC,MAAP,CAAc,EAAd,CAA9F,CACA,cAAe,SAASC,UAAT,CAAmBC,eAAnB,CAAoC,CACjD,GAAIC,IAAG,CAAGP,KAAK,CAACQ,MAAN,CAAaP,aAAb,CAAV,CAEA,GAAIM,GAAG,CAACE,OAAJ,GAAgBR,aAApB,CAAmC,CACjCM,GAAG,CAACE,OAAJ,CAAcH,eAAe,EAA7B,CACD,CAGD,MAAOC,IAAG,CAACE,OAAX,CACD"},"metadata":{},"sourceType":"module"}