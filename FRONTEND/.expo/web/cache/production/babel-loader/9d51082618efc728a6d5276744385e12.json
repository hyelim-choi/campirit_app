{"ast":null,"code":"import{canUseDOM}from'fbjs/lib/ExecutionEnvironment';function isScreenReaderEnabled(){return new Promise(function(resolve,reject){resolve(true);});}var prefersReducedMotionMedia=canUseDOM&&typeof window.matchMedia==='function'?window.matchMedia('(prefers-reduced-motion: reduce)'):null;function isReduceMotionEnabled(){return new Promise(function(resolve,reject){resolve(prefersReducedMotionMedia?prefersReducedMotionMedia.matches:true);});}function addChangeListener(fn){if(prefersReducedMotionMedia!=null){prefersReducedMotionMedia.addEventListener!=null?prefersReducedMotionMedia.addEventListener('change',fn):prefersReducedMotionMedia.addListener(fn);}}function removeChangeListener(fn){if(prefersReducedMotionMedia!=null){prefersReducedMotionMedia.removeEventListener!=null?prefersReducedMotionMedia.removeEventListener('change',fn):prefersReducedMotionMedia.removeListener(fn);}}var handlers={};var AccessibilityInfo={isScreenReaderEnabled:isScreenReaderEnabled,isReduceMotionEnabled:isReduceMotionEnabled,fetch:isScreenReaderEnabled,addEventListener:function addEventListener(eventName,handler){if(eventName==='reduceMotionChanged'){if(!prefersReducedMotionMedia){return;}var listener=function listener(event){handler(event.matches);};addChangeListener(listener);handlers[handler]=listener;}return{remove:function remove(){return AccessibilityInfo.removeEventListener(eventName,handler);}};},setAccessibilityFocus:function setAccessibilityFocus(reactTag){},announceForAccessibility:function announceForAccessibility(announcement){},removeEventListener:function removeEventListener(eventName,handler){if(eventName==='reduceMotionChanged'){var listener=handlers[handler];if(!listener||!prefersReducedMotionMedia){return;}removeChangeListener(listener);}return;}};export default AccessibilityInfo;","map":{"version":3,"names":["canUseDOM","isScreenReaderEnabled","Promise","resolve","reject","prefersReducedMotionMedia","window","matchMedia","isReduceMotionEnabled","matches","addChangeListener","fn","addEventListener","addListener","removeChangeListener","removeEventListener","removeListener","handlers","AccessibilityInfo","fetch","eventName","handler","listener","event","remove","setAccessibilityFocus","reactTag","announceForAccessibility","announcement"],"sources":["C:/Users/sycla/Coding/Campirit/FRONTEND/node_modules/react-native-web/dist/exports/AccessibilityInfo/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\r\n\r\nfunction isScreenReaderEnabled() {\r\n  return new Promise(function (resolve, reject) {\r\n    resolve(true);\r\n  });\r\n}\r\n\r\nvar prefersReducedMotionMedia = canUseDOM && typeof window.matchMedia === 'function' ? window.matchMedia('(prefers-reduced-motion: reduce)') : null;\r\n\r\nfunction isReduceMotionEnabled() {\r\n  return new Promise(function (resolve, reject) {\r\n    resolve(prefersReducedMotionMedia ? prefersReducedMotionMedia.matches : true);\r\n  });\r\n}\r\n\r\nfunction addChangeListener(fn) {\r\n  if (prefersReducedMotionMedia != null) {\r\n    prefersReducedMotionMedia.addEventListener != null ? prefersReducedMotionMedia.addEventListener('change', fn) : prefersReducedMotionMedia.addListener(fn);\r\n  }\r\n}\r\n\r\nfunction removeChangeListener(fn) {\r\n  if (prefersReducedMotionMedia != null) {\r\n    prefersReducedMotionMedia.removeEventListener != null ? prefersReducedMotionMedia.removeEventListener('change', fn) : prefersReducedMotionMedia.removeListener(fn);\r\n  }\r\n}\r\n\r\nvar handlers = {};\r\nvar AccessibilityInfo = {\r\n  /**\r\n   * Query whether a screen reader is currently enabled.\r\n   *\r\n   * Returns a promise which resolves to a boolean.\r\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\r\n   */\r\n  isScreenReaderEnabled: isScreenReaderEnabled,\r\n\r\n  /**\r\n   * Query whether the user prefers reduced motion.\r\n   *\r\n   * Returns a promise which resolves to a boolean.\r\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\r\n   */\r\n  isReduceMotionEnabled: isReduceMotionEnabled,\r\n\r\n  /**\r\n   * Deprecated\r\n   */\r\n  fetch: isScreenReaderEnabled,\r\n\r\n  /**\r\n   * Add an event handler. Supported events: reduceMotionChanged\r\n   */\r\n  addEventListener: function addEventListener(eventName, handler) {\r\n    if (eventName === 'reduceMotionChanged') {\r\n      if (!prefersReducedMotionMedia) {\r\n        return;\r\n      }\r\n\r\n      var listener = function listener(event) {\r\n        handler(event.matches);\r\n      };\r\n\r\n      addChangeListener(listener);\r\n      handlers[handler] = listener;\r\n    }\r\n\r\n    return {\r\n      remove: function remove() {\r\n        return AccessibilityInfo.removeEventListener(eventName, handler);\r\n      }\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Set accessibility focus to a react component.\r\n   */\r\n  setAccessibilityFocus: function setAccessibilityFocus(reactTag) {},\r\n\r\n  /**\r\n   * Post a string to be announced by the screen reader.\r\n   */\r\n  announceForAccessibility: function announceForAccessibility(announcement) {},\r\n\r\n  /**\r\n   * Remove an event handler.\r\n   */\r\n  removeEventListener: function removeEventListener(eventName, handler) {\r\n    if (eventName === 'reduceMotionChanged') {\r\n      var listener = handlers[handler];\r\n\r\n      if (!listener || !prefersReducedMotionMedia) {\r\n        return;\r\n      }\r\n\r\n      removeChangeListener(listener);\r\n    }\r\n\r\n    return;\r\n  }\r\n};\r\nexport default AccessibilityInfo;"],"mappings":"AAQA,OAASA,SAAT,KAA0B,+BAA1B,CAEA,QAASC,sBAAT,EAAiC,CAC/B,MAAO,IAAIC,QAAJ,CAAY,SAAUC,OAAV,CAAmBC,MAAnB,CAA2B,CAC5CD,OAAO,CAAC,IAAD,CAAP,CACD,CAFM,CAAP,CAGD,CAED,GAAIE,0BAAyB,CAAGL,SAAS,EAAI,MAAOM,OAAM,CAACC,UAAd,GAA6B,UAA1C,CAAuDD,MAAM,CAACC,UAAP,CAAkB,kCAAlB,CAAvD,CAA+G,IAA/I,CAEA,QAASC,sBAAT,EAAiC,CAC/B,MAAO,IAAIN,QAAJ,CAAY,SAAUC,OAAV,CAAmBC,MAAnB,CAA2B,CAC5CD,OAAO,CAACE,yBAAyB,CAAGA,yBAAyB,CAACI,OAA7B,CAAuC,IAAjE,CAAP,CACD,CAFM,CAAP,CAGD,CAED,QAASC,kBAAT,CAA2BC,EAA3B,CAA+B,CAC7B,GAAIN,yBAAyB,EAAI,IAAjC,CAAuC,CACrCA,yBAAyB,CAACO,gBAA1B,EAA8C,IAA9C,CAAqDP,yBAAyB,CAACO,gBAA1B,CAA2C,QAA3C,CAAqDD,EAArD,CAArD,CAAgHN,yBAAyB,CAACQ,WAA1B,CAAsCF,EAAtC,CAAhH,CACD,CACF,CAED,QAASG,qBAAT,CAA8BH,EAA9B,CAAkC,CAChC,GAAIN,yBAAyB,EAAI,IAAjC,CAAuC,CACrCA,yBAAyB,CAACU,mBAA1B,EAAiD,IAAjD,CAAwDV,yBAAyB,CAACU,mBAA1B,CAA8C,QAA9C,CAAwDJ,EAAxD,CAAxD,CAAsHN,yBAAyB,CAACW,cAA1B,CAAyCL,EAAzC,CAAtH,CACD,CACF,CAED,GAAIM,SAAQ,CAAG,EAAf,CACA,GAAIC,kBAAiB,CAAG,CAOtBjB,qBAAqB,CAAEA,qBAPD,CAetBO,qBAAqB,CAAEA,qBAfD,CAoBtBW,KAAK,CAAElB,qBApBe,CAyBtBW,gBAAgB,CAAE,QAASA,iBAAT,CAA0BQ,SAA1B,CAAqCC,OAArC,CAA8C,CAC9D,GAAID,SAAS,GAAK,qBAAlB,CAAyC,CACvC,GAAI,CAACf,yBAAL,CAAgC,CAC9B,OACD,CAED,GAAIiB,SAAQ,CAAG,QAASA,SAAT,CAAkBC,KAAlB,CAAyB,CACtCF,OAAO,CAACE,KAAK,CAACd,OAAP,CAAP,CACD,CAFD,CAIAC,iBAAiB,CAACY,QAAD,CAAjB,CACAL,QAAQ,CAACI,OAAD,CAAR,CAAoBC,QAApB,CACD,CAED,MAAO,CACLE,MAAM,CAAE,QAASA,OAAT,EAAkB,CACxB,MAAON,kBAAiB,CAACH,mBAAlB,CAAsCK,SAAtC,CAAiDC,OAAjD,CAAP,CACD,CAHI,CAAP,CAKD,CA5CqB,CAiDtBI,qBAAqB,CAAE,QAASA,sBAAT,CAA+BC,QAA/B,CAAyC,CAAE,CAjD5C,CAsDtBC,wBAAwB,CAAE,QAASA,yBAAT,CAAkCC,YAAlC,CAAgD,CAAE,CAtDtD,CA2DtBb,mBAAmB,CAAE,QAASA,oBAAT,CAA6BK,SAA7B,CAAwCC,OAAxC,CAAiD,CACpE,GAAID,SAAS,GAAK,qBAAlB,CAAyC,CACvC,GAAIE,SAAQ,CAAGL,QAAQ,CAACI,OAAD,CAAvB,CAEA,GAAI,CAACC,QAAD,EAAa,CAACjB,yBAAlB,CAA6C,CAC3C,OACD,CAEDS,oBAAoB,CAACQ,QAAD,CAApB,CACD,CAED,OACD,CAvEqB,CAAxB,CAyEA,cAAeJ,kBAAf"},"metadata":{},"sourceType":"module"}