{"ast":null,"code":"import UIManager from\"../../exports/UIManager\";var TextInputState={_currentlyFocusedNode:null,currentlyFocusedField:function currentlyFocusedField(){if(document.activeElement!==this._currentlyFocusedNode){this._currentlyFocusedNode=null;}return this._currentlyFocusedNode;},focusTextInput:function focusTextInput(textFieldNode){if(textFieldNode!==null){this._currentlyFocusedNode=textFieldNode;if(document.activeElement!==textFieldNode){UIManager.focus(textFieldNode);}}},blurTextInput:function blurTextInput(textFieldNode){if(textFieldNode!==null){this._currentlyFocusedNode=null;if(document.activeElement===textFieldNode){UIManager.blur(textFieldNode);}}}};export default TextInputState;","map":{"version":3,"names":["UIManager","TextInputState","_currentlyFocusedNode","currentlyFocusedField","document","activeElement","focusTextInput","textFieldNode","focus","blurTextInput","blur"],"sources":["C:/Users/sycla/Coding/Campirit/FRONTEND/node_modules/react-native-web/dist/modules/TextInputState/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport UIManager from '../../exports/UIManager';\r\n/**\r\n * This class is responsible for coordinating the \"focused\"\r\n * state for TextInputs. All calls relating to the keyboard\r\n * should be funneled through here\r\n */\r\n\r\nvar TextInputState = {\r\n  /**\r\n   * Internal state\r\n   */\r\n  _currentlyFocusedNode: null,\r\n\r\n  /**\r\n   * Returns the ID of the currently focused text field, if one exists\r\n   * If no text field is focused it returns null\r\n   */\r\n  currentlyFocusedField: function currentlyFocusedField() {\r\n    if (document.activeElement !== this._currentlyFocusedNode) {\r\n      this._currentlyFocusedNode = null;\r\n    }\r\n\r\n    return this._currentlyFocusedNode;\r\n  },\r\n\r\n  /**\r\n   * @param {Object} TextInputID id of the text field to focus\r\n   * Focuses the specified text field\r\n   * noop if the text field was already focused\r\n   */\r\n  focusTextInput: function focusTextInput(textFieldNode) {\r\n    if (textFieldNode !== null) {\r\n      this._currentlyFocusedNode = textFieldNode;\r\n\r\n      if (document.activeElement !== textFieldNode) {\r\n        UIManager.focus(textFieldNode);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {Object} textFieldNode id of the text field to focus\r\n   * Unfocuses the specified text field\r\n   * noop if it wasn't focused\r\n   */\r\n  blurTextInput: function blurTextInput(textFieldNode) {\r\n    if (textFieldNode !== null) {\r\n      this._currentlyFocusedNode = null;\r\n\r\n      if (document.activeElement === textFieldNode) {\r\n        UIManager.blur(textFieldNode);\r\n      }\r\n    }\r\n  }\r\n};\r\nexport default TextInputState;"],"mappings":"AASA,MAAOA,UAAP,+BAOA,GAAIC,eAAc,CAAG,CAInBC,qBAAqB,CAAE,IAJJ,CAUnBC,qBAAqB,CAAE,QAASA,sBAAT,EAAiC,CACtD,GAAIC,QAAQ,CAACC,aAAT,GAA2B,KAAKH,qBAApC,CAA2D,CACzD,KAAKA,qBAAL,CAA6B,IAA7B,CACD,CAED,MAAO,MAAKA,qBAAZ,CACD,CAhBkB,CAuBnBI,cAAc,CAAE,QAASA,eAAT,CAAwBC,aAAxB,CAAuC,CACrD,GAAIA,aAAa,GAAK,IAAtB,CAA4B,CAC1B,KAAKL,qBAAL,CAA6BK,aAA7B,CAEA,GAAIH,QAAQ,CAACC,aAAT,GAA2BE,aAA/B,CAA8C,CAC5CP,SAAS,CAACQ,KAAV,CAAgBD,aAAhB,EACD,CACF,CACF,CA/BkB,CAsCnBE,aAAa,CAAE,QAASA,cAAT,CAAuBF,aAAvB,CAAsC,CACnD,GAAIA,aAAa,GAAK,IAAtB,CAA4B,CAC1B,KAAKL,qBAAL,CAA6B,IAA7B,CAEA,GAAIE,QAAQ,CAACC,aAAT,GAA2BE,aAA/B,CAA8C,CAC5CP,SAAS,CAACU,IAAV,CAAeH,aAAf,EACD,CACF,CACF,CA9CkB,CAArB,CAgDA,cAAeN,eAAf"},"metadata":{},"sourceType":"module"}