{"ast":null,"code":"'use strict';import InteractionManager from\"../../../exports/InteractionManager\";var Batchinator=function(){function Batchinator(callback,delayMS){this._delay=delayMS;this._callback=callback;}var _proto=Batchinator.prototype;_proto.dispose=function dispose(options){if(options===void 0){options={abort:false};}if(this._taskHandle){this._taskHandle.cancel();if(!options.abort){this._callback();}this._taskHandle=null;}};_proto.schedule=function schedule(){var _this=this;if(this._taskHandle){return;}var timeoutHandle=setTimeout(function(){_this._taskHandle=InteractionManager.runAfterInteractions(function(){_this._taskHandle=null;_this._callback();});},this._delay);this._taskHandle={cancel:function cancel(){return clearTimeout(timeoutHandle);}};};return Batchinator;}();export default Batchinator;","map":{"version":3,"names":["InteractionManager","Batchinator","callback","delayMS","_delay","_callback","_proto","prototype","dispose","options","abort","_taskHandle","cancel","schedule","_this","timeoutHandle","setTimeout","runAfterInteractions","clearTimeout"],"sources":["C:/Users/sycla/Coding/Campirit/FRONTEND/node_modules/react-native-web/dist/vendor/react-native/Batchinator/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n */\r\n'use strict';\r\n\r\nimport InteractionManager from '../../../exports/InteractionManager';\r\n/**\r\n * A simple class for batching up invocations of a low-pri callback. A timeout is set to run the\r\n * callback once after a delay, no matter how many times it's scheduled. Once the delay is reached,\r\n * InteractionManager.runAfterInteractions is used to invoke the callback after any hi-pri\r\n * interactions are done running.\r\n *\r\n * Make sure to cleanup with dispose().  Example:\r\n *\r\n *   class Widget extends React.Component {\r\n *     _batchedSave: new Batchinator(() => this._saveState, 1000);\r\n *     _saveSate() {\r\n *       // save this.state to disk\r\n *     }\r\n *     componentDidUpdate() {\r\n *       this._batchedSave.schedule();\r\n *     }\r\n *     componentWillUnmount() {\r\n *       this._batchedSave.dispose();\r\n *     }\r\n *     ...\r\n *   }\r\n */\r\n\r\nvar Batchinator = /*#__PURE__*/function () {\r\n  function Batchinator(callback, delayMS) {\r\n    this._delay = delayMS;\r\n    this._callback = callback;\r\n  }\r\n  /*\r\n   * Cleanup any pending tasks.\r\n   *\r\n   * By default, if there is a pending task the callback is run immediately. Set the option abort to\r\n   * true to not call the callback if it was pending.\r\n   */\r\n\r\n\r\n  var _proto = Batchinator.prototype;\r\n\r\n  _proto.dispose = function dispose(options) {\r\n    if (options === void 0) {\r\n      options = {\r\n        abort: false\r\n      };\r\n    }\r\n\r\n    if (this._taskHandle) {\r\n      this._taskHandle.cancel();\r\n\r\n      if (!options.abort) {\r\n        this._callback();\r\n      }\r\n\r\n      this._taskHandle = null;\r\n    }\r\n  };\r\n\r\n  _proto.schedule = function schedule() {\r\n    var _this = this;\r\n\r\n    if (this._taskHandle) {\r\n      return;\r\n    }\r\n\r\n    var timeoutHandle = setTimeout(function () {\r\n      _this._taskHandle = InteractionManager.runAfterInteractions(function () {\r\n        // Note that we clear the handle before invoking the callback so that if the callback calls\r\n        // schedule again, it will actually schedule another task.\r\n        _this._taskHandle = null;\r\n\r\n        _this._callback();\r\n      });\r\n    }, this._delay);\r\n    this._taskHandle = {\r\n      cancel: function cancel() {\r\n        return clearTimeout(timeoutHandle);\r\n      }\r\n    };\r\n  };\r\n\r\n  return Batchinator;\r\n}();\r\n\r\nexport default Batchinator;"],"mappings":"AASA,aAEA,MAAOA,mBAAP,2CAwBA,GAAIC,YAAW,CAAgB,UAAY,CACzC,QAASA,YAAT,CAAqBC,QAArB,CAA+BC,OAA/B,CAAwC,CACtC,KAAKC,MAAL,CAAcD,OAAd,CACA,KAAKE,SAAL,CAAiBH,QAAjB,CACD,CASD,GAAII,OAAM,CAAGL,WAAW,CAACM,SAAzB,CAEAD,MAAM,CAACE,OAAP,CAAiB,QAASA,QAAT,CAAiBC,OAAjB,CAA0B,CACzC,GAAIA,OAAO,GAAK,IAAK,EAArB,CAAwB,CACtBA,OAAO,CAAG,CACRC,KAAK,CAAE,KADC,CAAV,CAGD,CAED,GAAI,KAAKC,WAAT,CAAsB,CACpB,KAAKA,WAAL,CAAiBC,MAAjB,GAEA,GAAI,CAACH,OAAO,CAACC,KAAb,CAAoB,CAClB,KAAKL,SAAL,GACD,CAED,KAAKM,WAAL,CAAmB,IAAnB,CACD,CACF,CAhBD,CAkBAL,MAAM,CAACO,QAAP,CAAkB,QAASA,SAAT,EAAoB,CACpC,GAAIC,MAAK,CAAG,IAAZ,CAEA,GAAI,KAAKH,WAAT,CAAsB,CACpB,OACD,CAED,GAAII,cAAa,CAAGC,UAAU,CAAC,UAAY,CACzCF,KAAK,CAACH,WAAN,CAAoBX,kBAAkB,CAACiB,oBAAnB,CAAwC,UAAY,CAGtEH,KAAK,CAACH,WAAN,CAAoB,IAApB,CAEAG,KAAK,CAACT,SAAN,GACD,CANmB,CAApB,CAOD,CAR6B,CAQ3B,KAAKD,MARsB,CAA9B,CASA,KAAKO,WAAL,CAAmB,CACjBC,MAAM,CAAE,QAASA,OAAT,EAAkB,CACxB,MAAOM,aAAY,CAACH,aAAD,CAAnB,CACD,CAHgB,CAAnB,CAKD,CArBD,CAuBA,MAAOd,YAAP,CACD,CAzD8B,EAA/B,CA2DA,cAAeA,YAAf"},"metadata":{},"sourceType":"module"}