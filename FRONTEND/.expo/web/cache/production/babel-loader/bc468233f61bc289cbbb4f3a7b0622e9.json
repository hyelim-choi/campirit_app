{"ast":null,"code":"var getBoundingClientRect=function getBoundingClientRect(node){if(node!=null){var isElement=node.nodeType===1;if(isElement&&typeof node.getBoundingClientRect==='function'){return node.getBoundingClientRect();}}};export default getBoundingClientRect;","map":{"version":3,"names":["getBoundingClientRect","node","isElement","nodeType"],"sources":["C:/Users/sycla/Coding/Campirit/FRONTEND/node_modules/react-native-web/dist/modules/getBoundingClientRect/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nvar getBoundingClientRect = function getBoundingClientRect(node) {\r\n  if (node != null) {\r\n    var isElement = node.nodeType === 1;\r\n    /* Node.ELEMENT_NODE */\r\n\r\n    if (isElement && typeof node.getBoundingClientRect === 'function') {\r\n      return node.getBoundingClientRect();\r\n    }\r\n  }\r\n};\r\n\r\nexport default getBoundingClientRect;"],"mappings":"AAQA,GAAIA,sBAAqB,CAAG,QAASA,sBAAT,CAA+BC,IAA/B,CAAqC,CAC/D,GAAIA,IAAI,EAAI,IAAZ,CAAkB,CAChB,GAAIC,UAAS,CAAGD,IAAI,CAACE,QAAL,GAAkB,CAAlC,CAGA,GAAID,SAAS,EAAI,MAAOD,KAAI,CAACD,qBAAZ,GAAsC,UAAvD,CAAmE,CACjE,MAAOC,KAAI,CAACD,qBAAL,EAAP,CACD,CACF,CACF,CATD,CAWA,cAAeA,sBAAf"},"metadata":{},"sourceType":"module"}