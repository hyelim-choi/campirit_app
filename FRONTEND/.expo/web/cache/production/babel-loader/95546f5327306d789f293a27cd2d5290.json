{"ast":null,"code":"import{isStartish,isMoveish,isEndish}from\"./ResponderEventTypes\";var __DEV__=process.env.NODE_ENV!=='production';var MAX_TOUCH_BANK=20;var touchBank=[];var touchHistory={touchBank:touchBank,numberActiveTouches:0,indexOfSingleActiveTouch:-1,mostRecentTimeStamp:0};function timestampForTouch(touch){return touch.timeStamp||touch.timestamp;}function createTouchRecord(touch){return{touchActive:true,startPageX:touch.pageX,startPageY:touch.pageY,startTimeStamp:timestampForTouch(touch),currentPageX:touch.pageX,currentPageY:touch.pageY,currentTimeStamp:timestampForTouch(touch),previousPageX:touch.pageX,previousPageY:touch.pageY,previousTimeStamp:timestampForTouch(touch)};}function resetTouchRecord(touchRecord,touch){touchRecord.touchActive=true;touchRecord.startPageX=touch.pageX;touchRecord.startPageY=touch.pageY;touchRecord.startTimeStamp=timestampForTouch(touch);touchRecord.currentPageX=touch.pageX;touchRecord.currentPageY=touch.pageY;touchRecord.currentTimeStamp=timestampForTouch(touch);touchRecord.previousPageX=touch.pageX;touchRecord.previousPageY=touch.pageY;touchRecord.previousTimeStamp=timestampForTouch(touch);}function getTouchIdentifier(_ref){var identifier=_ref.identifier;if(identifier==null){console.error('Touch object is missing identifier.');}if(__DEV__){if(identifier>MAX_TOUCH_BANK){console.error('Touch identifier %s is greater than maximum supported %s which causes '+'performance issues backfilling array locations for all of the indices.',identifier,MAX_TOUCH_BANK);}}return identifier;}function recordTouchStart(touch){var identifier=getTouchIdentifier(touch);var touchRecord=touchBank[identifier];if(touchRecord){resetTouchRecord(touchRecord,touch);}else{touchBank[identifier]=createTouchRecord(touch);}touchHistory.mostRecentTimeStamp=timestampForTouch(touch);}function recordTouchMove(touch){var touchRecord=touchBank[getTouchIdentifier(touch)];if(touchRecord){touchRecord.touchActive=true;touchRecord.previousPageX=touchRecord.currentPageX;touchRecord.previousPageY=touchRecord.currentPageY;touchRecord.previousTimeStamp=touchRecord.currentTimeStamp;touchRecord.currentPageX=touch.pageX;touchRecord.currentPageY=touch.pageY;touchRecord.currentTimeStamp=timestampForTouch(touch);touchHistory.mostRecentTimeStamp=timestampForTouch(touch);}else{console.warn('Cannot record touch move without a touch start.\\n',\"Touch Move: \"+printTouch(touch)+\"\\n\",\"Touch Bank: \"+printTouchBank());}}function recordTouchEnd(touch){var touchRecord=touchBank[getTouchIdentifier(touch)];if(touchRecord){touchRecord.touchActive=false;touchRecord.previousPageX=touchRecord.currentPageX;touchRecord.previousPageY=touchRecord.currentPageY;touchRecord.previousTimeStamp=touchRecord.currentTimeStamp;touchRecord.currentPageX=touch.pageX;touchRecord.currentPageY=touch.pageY;touchRecord.currentTimeStamp=timestampForTouch(touch);touchHistory.mostRecentTimeStamp=timestampForTouch(touch);}else{console.warn('Cannot record touch end without a touch start.\\n',\"Touch End: \"+printTouch(touch)+\"\\n\",\"Touch Bank: \"+printTouchBank());}}function printTouch(touch){return JSON.stringify({identifier:touch.identifier,pageX:touch.pageX,pageY:touch.pageY,timestamp:timestampForTouch(touch)});}function printTouchBank(){var printed=JSON.stringify(touchBank.slice(0,MAX_TOUCH_BANK));if(touchBank.length>MAX_TOUCH_BANK){printed+=' (original size: '+touchBank.length+')';}return printed;}var ResponderTouchHistoryStore={recordTouchTrack:function recordTouchTrack(topLevelType,nativeEvent){if(isMoveish(topLevelType)){nativeEvent.changedTouches.forEach(recordTouchMove);}else if(isStartish(topLevelType)){nativeEvent.changedTouches.forEach(recordTouchStart);touchHistory.numberActiveTouches=nativeEvent.touches.length;if(touchHistory.numberActiveTouches===1){touchHistory.indexOfSingleActiveTouch=nativeEvent.touches[0].identifier;}}else if(isEndish(topLevelType)){nativeEvent.changedTouches.forEach(recordTouchEnd);touchHistory.numberActiveTouches=nativeEvent.touches.length;if(touchHistory.numberActiveTouches===1){for(var i=0;i<touchBank.length;i++){var touchTrackToCheck=touchBank[i];if(touchTrackToCheck!=null&&touchTrackToCheck.touchActive){touchHistory.indexOfSingleActiveTouch=i;break;}}if(__DEV__){var activeRecord=touchBank[touchHistory.indexOfSingleActiveTouch];if(!(activeRecord!=null&&activeRecord.touchActive)){console.error('Cannot find single active touch.');}}}}},touchHistory:touchHistory};export default ResponderTouchHistoryStore;","map":{"version":3,"names":["isStartish","isMoveish","isEndish","__DEV__","process","env","NODE_ENV","MAX_TOUCH_BANK","touchBank","touchHistory","numberActiveTouches","indexOfSingleActiveTouch","mostRecentTimeStamp","timestampForTouch","touch","timeStamp","timestamp","createTouchRecord","touchActive","startPageX","pageX","startPageY","pageY","startTimeStamp","currentPageX","currentPageY","currentTimeStamp","previousPageX","previousPageY","previousTimeStamp","resetTouchRecord","touchRecord","getTouchIdentifier","_ref","identifier","console","error","recordTouchStart","recordTouchMove","warn","printTouch","printTouchBank","recordTouchEnd","JSON","stringify","printed","slice","length","ResponderTouchHistoryStore","recordTouchTrack","topLevelType","nativeEvent","changedTouches","forEach","touches","i","touchTrackToCheck","activeRecord"],"sources":["C:/Users/sycla/Coding/Campirit/FRONTEND/node_modules/react-native-web/dist/modules/useResponderEvents/ResponderTouchHistoryStore.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport { isStartish, isMoveish, isEndish } from './ResponderEventTypes';\r\n\r\n/**\r\n * Tracks the position and time of each active touch by `touch.identifier`. We\r\n * should typically only see IDs in the range of 1-20 because IDs get recycled\r\n * when touches end and start again.\r\n */\r\nvar __DEV__ = process.env.NODE_ENV !== 'production';\r\n\r\nvar MAX_TOUCH_BANK = 20;\r\nvar touchBank = [];\r\nvar touchHistory = {\r\n  touchBank: touchBank,\r\n  numberActiveTouches: 0,\r\n  // If there is only one active touch, we remember its location. This prevents\r\n  // us having to loop through all of the touches all the time in the most\r\n  // common case.\r\n  indexOfSingleActiveTouch: -1,\r\n  mostRecentTimeStamp: 0\r\n};\r\n\r\nfunction timestampForTouch(touch) {\r\n  // The legacy internal implementation provides \"timeStamp\", which has been\r\n  // renamed to \"timestamp\".\r\n  return touch.timeStamp || touch.timestamp;\r\n}\r\n/**\r\n * TODO: Instead of making gestures recompute filtered velocity, we could\r\n * include a built in velocity computation that can be reused globally.\r\n */\r\n\r\n\r\nfunction createTouchRecord(touch) {\r\n  return {\r\n    touchActive: true,\r\n    startPageX: touch.pageX,\r\n    startPageY: touch.pageY,\r\n    startTimeStamp: timestampForTouch(touch),\r\n    currentPageX: touch.pageX,\r\n    currentPageY: touch.pageY,\r\n    currentTimeStamp: timestampForTouch(touch),\r\n    previousPageX: touch.pageX,\r\n    previousPageY: touch.pageY,\r\n    previousTimeStamp: timestampForTouch(touch)\r\n  };\r\n}\r\n\r\nfunction resetTouchRecord(touchRecord, touch) {\r\n  touchRecord.touchActive = true;\r\n  touchRecord.startPageX = touch.pageX;\r\n  touchRecord.startPageY = touch.pageY;\r\n  touchRecord.startTimeStamp = timestampForTouch(touch);\r\n  touchRecord.currentPageX = touch.pageX;\r\n  touchRecord.currentPageY = touch.pageY;\r\n  touchRecord.currentTimeStamp = timestampForTouch(touch);\r\n  touchRecord.previousPageX = touch.pageX;\r\n  touchRecord.previousPageY = touch.pageY;\r\n  touchRecord.previousTimeStamp = timestampForTouch(touch);\r\n}\r\n\r\nfunction getTouchIdentifier(_ref) {\r\n  var identifier = _ref.identifier;\r\n\r\n  if (identifier == null) {\r\n    console.error('Touch object is missing identifier.');\r\n  }\r\n\r\n  if (__DEV__) {\r\n    if (identifier > MAX_TOUCH_BANK) {\r\n      console.error('Touch identifier %s is greater than maximum supported %s which causes ' + 'performance issues backfilling array locations for all of the indices.', identifier, MAX_TOUCH_BANK);\r\n    }\r\n  }\r\n\r\n  return identifier;\r\n}\r\n\r\nfunction recordTouchStart(touch) {\r\n  var identifier = getTouchIdentifier(touch);\r\n  var touchRecord = touchBank[identifier];\r\n\r\n  if (touchRecord) {\r\n    resetTouchRecord(touchRecord, touch);\r\n  } else {\r\n    touchBank[identifier] = createTouchRecord(touch);\r\n  }\r\n\r\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\r\n}\r\n\r\nfunction recordTouchMove(touch) {\r\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\r\n\r\n  if (touchRecord) {\r\n    touchRecord.touchActive = true;\r\n    touchRecord.previousPageX = touchRecord.currentPageX;\r\n    touchRecord.previousPageY = touchRecord.currentPageY;\r\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\r\n    touchRecord.currentPageX = touch.pageX;\r\n    touchRecord.currentPageY = touch.pageY;\r\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\r\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\r\n  } else {\r\n    console.warn('Cannot record touch move without a touch start.\\n', \"Touch Move: \" + printTouch(touch) + \"\\n\", \"Touch Bank: \" + printTouchBank());\r\n  }\r\n}\r\n\r\nfunction recordTouchEnd(touch) {\r\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\r\n\r\n  if (touchRecord) {\r\n    touchRecord.touchActive = false;\r\n    touchRecord.previousPageX = touchRecord.currentPageX;\r\n    touchRecord.previousPageY = touchRecord.currentPageY;\r\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\r\n    touchRecord.currentPageX = touch.pageX;\r\n    touchRecord.currentPageY = touch.pageY;\r\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\r\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\r\n  } else {\r\n    console.warn('Cannot record touch end without a touch start.\\n', \"Touch End: \" + printTouch(touch) + \"\\n\", \"Touch Bank: \" + printTouchBank());\r\n  }\r\n}\r\n\r\nfunction printTouch(touch) {\r\n  return JSON.stringify({\r\n    identifier: touch.identifier,\r\n    pageX: touch.pageX,\r\n    pageY: touch.pageY,\r\n    timestamp: timestampForTouch(touch)\r\n  });\r\n}\r\n\r\nfunction printTouchBank() {\r\n  var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\r\n\r\n  if (touchBank.length > MAX_TOUCH_BANK) {\r\n    printed += ' (original size: ' + touchBank.length + ')';\r\n  }\r\n\r\n  return printed;\r\n}\r\n\r\nvar ResponderTouchHistoryStore = {\r\n  recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {\r\n    if (isMoveish(topLevelType)) {\r\n      nativeEvent.changedTouches.forEach(recordTouchMove);\r\n    } else if (isStartish(topLevelType)) {\r\n      nativeEvent.changedTouches.forEach(recordTouchStart);\r\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\r\n\r\n      if (touchHistory.numberActiveTouches === 1) {\r\n        touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;\r\n      }\r\n    } else if (isEndish(topLevelType)) {\r\n      nativeEvent.changedTouches.forEach(recordTouchEnd);\r\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\r\n\r\n      if (touchHistory.numberActiveTouches === 1) {\r\n        for (var i = 0; i < touchBank.length; i++) {\r\n          var touchTrackToCheck = touchBank[i];\r\n\r\n          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\r\n            touchHistory.indexOfSingleActiveTouch = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (__DEV__) {\r\n          var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\r\n\r\n          if (!(activeRecord != null && activeRecord.touchActive)) {\r\n            console.error('Cannot find single active touch.');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  touchHistory: touchHistory\r\n};\r\nexport default ResponderTouchHistoryStore;"],"mappings":"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"},"metadata":{},"sourceType":"module"}