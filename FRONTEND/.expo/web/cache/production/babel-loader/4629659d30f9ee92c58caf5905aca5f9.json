{"ast":null,"code":"'use strict';function setAndForwardRef(_ref){var getForwardedRef=_ref.getForwardedRef,setLocalRef=_ref.setLocalRef;return function forwardRef(ref){var forwardedRef=getForwardedRef();setLocalRef(ref);if(typeof forwardedRef==='function'){forwardedRef(ref);}else if(typeof forwardedRef==='object'&&forwardedRef!=null){forwardedRef.current=ref;}};}export default setAndForwardRef;","map":{"version":3,"names":["setAndForwardRef","_ref","getForwardedRef","setLocalRef","forwardRef","ref","forwardedRef","current"],"sources":["C:/Users/sycla/Coding/Campirit/FRONTEND/node_modules/react-native-web/dist/vendor/react-native/Utilities/setAndForwardRef.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n */\r\n'use strict';\r\n\r\n/**\r\n * This is a helper function for when a component needs to be able to forward a ref\r\n * to a child component, but still needs to have access to that component as part of\r\n * its implementation.\r\n *\r\n * Its main use case is in wrappers for native components.\r\n *\r\n * Usage:\r\n *\r\n *   class MyView extends React.Component {\r\n *     _nativeRef = null;\r\n *\r\n *     _setNativeRef = setAndForwardRef({\r\n *       getForwardedRef: () => this.props.forwardedRef,\r\n *       setLocalRef: ref => {\r\n *         this._nativeRef = ref;\r\n *       },\r\n *     });\r\n *\r\n *     render() {\r\n *       return <View ref={this._setNativeRef} />;\r\n *     }\r\n *   }\r\n *\r\n *   const MyViewWithRef = React.forwardRef((props, ref) => (\r\n *     <MyView {...props} forwardedRef={ref} />\r\n *   ));\r\n *\r\n *   module.exports = MyViewWithRef;\r\n */\r\nfunction setAndForwardRef(_ref) {\r\n  var getForwardedRef = _ref.getForwardedRef,\r\n      setLocalRef = _ref.setLocalRef;\r\n  return function forwardRef(ref) {\r\n    var forwardedRef = getForwardedRef();\r\n    setLocalRef(ref); // Forward to user ref prop (if one has been specified)\r\n\r\n    if (typeof forwardedRef === 'function') {\r\n      // Handle function-based refs. String-based refs are handled as functions.\r\n      forwardedRef(ref);\r\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\r\n      // Handle createRef-based refs\r\n      forwardedRef.current = ref;\r\n    }\r\n  };\r\n}\r\n\r\nexport default setAndForwardRef;"],"mappings":"AASA,aAgCA,QAASA,iBAAT,CAA0BC,IAA1B,CAAgC,CAC9B,GAAIC,gBAAe,CAAGD,IAAI,CAACC,eAA3B,CACIC,WAAW,CAAGF,IAAI,CAACE,WADvB,CAEA,MAAO,SAASC,WAAT,CAAoBC,GAApB,CAAyB,CAC9B,GAAIC,aAAY,CAAGJ,eAAe,EAAlC,CACAC,WAAW,CAACE,GAAD,CAAX,CAEA,GAAI,MAAOC,aAAP,GAAwB,UAA5B,CAAwC,CAEtCA,YAAY,CAACD,GAAD,CAAZ,CACD,CAHD,IAGO,IAAI,MAAOC,aAAP,GAAwB,QAAxB,EAAoCA,YAAY,EAAI,IAAxD,CAA8D,CAEnEA,YAAY,CAACC,OAAb,CAAuBF,GAAvB,CACD,CACF,CAXD,CAYD,CAED,cAAeL,iBAAf"},"metadata":{},"sourceType":"module"}