{"ast":null,"code":"'use strict';import PressResponder from\"./PressResponder\";import{useDebugValue,useEffect,useRef}from'react';export default function usePressEvents(hostRef,config){var pressResponderRef=useRef(null);if(pressResponderRef.current==null){pressResponderRef.current=new PressResponder(config);}var pressResponder=pressResponderRef.current;useEffect(function(){pressResponder.configure(config);},[config,pressResponder]);useEffect(function(){return function(){pressResponder.reset();};},[pressResponder]);useDebugValue(config);return pressResponder.getEventHandlers();}","map":{"version":3,"names":["PressResponder","useDebugValue","useEffect","useRef","usePressEvents","hostRef","config","pressResponderRef","current","pressResponder","configure","reset","getEventHandlers"],"sources":["C:/Users/sycla/Coding/Campirit/FRONTEND/node_modules/react-native-web/dist/modules/usePressEvents/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\r\n'use strict';\r\n\r\nimport PressResponder from './PressResponder';\r\nimport { useDebugValue, useEffect, useRef } from 'react';\r\nexport default function usePressEvents(hostRef, config) {\r\n  var pressResponderRef = useRef(null);\r\n\r\n  if (pressResponderRef.current == null) {\r\n    pressResponderRef.current = new PressResponder(config);\r\n  }\r\n\r\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\r\n\r\n  useEffect(function () {\r\n    pressResponder.configure(config);\r\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\r\n  // a separate effect because we do not want to rest the responder when `config` changes.\r\n\r\n  useEffect(function () {\r\n    return function () {\r\n      pressResponder.reset();\r\n    };\r\n  }, [pressResponder]);\r\n  useDebugValue(config);\r\n  return pressResponder.getEventHandlers();\r\n}"],"mappings":"AASA,aAEA,MAAOA,eAAP,wBACA,OAASC,aAAT,CAAwBC,SAAxB,CAAmCC,MAAnC,KAAiD,OAAjD,CACA,cAAe,SAASC,eAAT,CAAwBC,OAAxB,CAAiCC,MAAjC,CAAyC,CACtD,GAAIC,kBAAiB,CAAGJ,MAAM,CAAC,IAAD,CAA9B,CAEA,GAAII,iBAAiB,CAACC,OAAlB,EAA6B,IAAjC,CAAuC,CACrCD,iBAAiB,CAACC,OAAlB,CAA4B,GAAIR,eAAJ,CAAmBM,MAAnB,CAA5B,CACD,CAED,GAAIG,eAAc,CAAGF,iBAAiB,CAACC,OAAvC,CAEAN,SAAS,CAAC,UAAY,CACpBO,cAAc,CAACC,SAAf,CAAyBJ,MAAzB,EACD,CAFQ,CAEN,CAACA,MAAD,CAASG,cAAT,CAFM,CAAT,CAKAP,SAAS,CAAC,UAAY,CACpB,MAAO,WAAY,CACjBO,cAAc,CAACE,KAAf,GACD,CAFD,CAGD,CAJQ,CAIN,CAACF,cAAD,CAJM,CAAT,CAKAR,aAAa,CAACK,MAAD,CAAb,CACA,MAAOG,eAAc,CAACG,gBAAf,EAAP,CACD"},"metadata":{},"sourceType":"module"}